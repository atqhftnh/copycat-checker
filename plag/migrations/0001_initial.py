# Generated by Django 2.2.13 on 2025-07-02 19:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('group', models.CharField(max_length=100)),
                ('intake', models.CharField(max_length=100)),
                ('join_code', models.CharField(blank=True, max_length=8, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lecturer', models.ForeignKey(limit_choices_to={'is_lecturer': True}, on_delete=django.db.models.deletion.CASCADE, related_name='lecturer_classrooms', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, limit_choices_to={'is_student': True}, related_name='student_classrooms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('renewal_day', models.PositiveSmallIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('currency', models.CharField(choices=[('GBP', 'GBP'), ('EUR', 'EUR'), ('USD', 'USD')], default='USD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('time_order_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProtectedResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=2048)),
                ('file', models.FileField(blank=True, upload_to='userfiles/%Y/%m/%d')),
                ('type', models.CharField(choices=[('URL', 'Website address'), ('PDF', 'PDF file'), ('DOC', 'Word document, old format'), ('DOCX', 'Word document, new format'), ('PPTX', 'Powerpoint presentation'), ('TXT', 'Standard text file')], default='URL', max_length=4)),
                ('status', models.CharField(choices=[('A', 'Active'), ('N', 'Newly placed order'), ('S', 'Being scanned'), ('F', 'Last scan failed'), ('P', 'Awaiting payment'), ('I', 'Inactive')], default='A', max_length=1)),
                ('scan_frequency', models.PositiveIntegerField(choices=[(86400, 'Daily'), (604800, 'Weekly'), (2592000, 'Monthly')], default=604800)),
                ('next_scan', models.DateTimeField()),
                ('original_filename', models.CharField(blank=True, max_length=260, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plag.Order')),
            ],
        ),
        migrations.CreateModel(
            name='Query',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='RecentBlogPosts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('link', models.CharField(max_length=2048)),
                ('desc', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ScanLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('protected_source', models.TextField(blank=True, null=True)),
                ('scoring_debug', models.TextField(blank=True, null=True)),
                ('fail_reason', models.CharField(blank=True, max_length=500, null=True)),
                ('fail_type', models.CharField(blank=True, choices=[('H', 'HTTP error'), ('C', 'No content candidates found (initial scan) or matched (post processing)'), ('E', 'Internal processing error'), ('I', 'Skipped/Ignored')], max_length=1, null=True)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('average_plagiarism_percent', models.FloatField(blank=True, help_text='Average plagiarism percentage for documents with multiple sources, excluding false positives.', null=True)),
                ('average_calculated_at', models.DateTimeField(blank=True, help_text='Timestamp when the average plagiarism percentage was last calculated.', null=True)),
                ('overall_plagiarism_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Overall percentage of the document found to be plagiarized across all sources.', max_digits=5, null=True)),
                ('overall_calculated_at', models.DateTimeField(blank=True, help_text='Timestamp when the overall plagiarism percentage was last calculated.', null=True)),
                ('protected_resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='plag.ProtectedResource')),
                ('queries', models.ManyToManyField(blank=True, to='plag.Query')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('student', 'Student'), ('lecturer', 'Lecturer')], max_length=10)),
                ('student_id', models.CharField(blank=True, max_length=20, null=True)),
                ('staff_id', models.CharField(blank=True, max_length=20, null=True)),
                ('full_name', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('results_per_page', models.PositiveSmallIntegerField(blank=True, choices=[(5, 5), (10, 10), (15, 15), (20, 20), (25, 25), (30, 30), (50, 50), (75, 75), (100, 100), (150, 150)], null=True)),
                ('email_frequency', models.CharField(blank=True, choices=[('I', 'Instant'), ('D', 'Daily'), ('W', 'Weekly'), ('M', 'Monthly'), ('N', 'Never')], max_length=1, null=True)),
                ('false_positive_prot', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='plag.Classroom')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_file', models.FileField(upload_to='submissions/')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('similarity_score', models.FloatField(blank=True, null=True)),
                ('student', models.ForeignKey(limit_choices_to={'is_student': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='plag.Task')),
            ],
        ),
        migrations.CreateModel(
            name='ScanResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('match_url', models.CharField(max_length=2048)),
                ('match_display_url', models.CharField(max_length=2048)),
                ('match_title', models.CharField(max_length=100)),
                ('match_desc', models.CharField(max_length=500)),
                ('post_scanned', models.BooleanField(default=False)),
                ('post_fail_reason', models.CharField(blank=True, max_length=500, null=True)),
                ('post_fail_type', models.CharField(blank=True, choices=[('H', 'HTTP error'), ('C', 'No content candidates found (initial scan) or matched (post processing)'), ('E', 'Internal processing error'), ('I', 'Skipped/Ignored')], max_length=1, null=True)),
                ('perc_of_duplication', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scan_results', to='plag.Query')),
                ('result_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plag.ScanLog')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9)),
                ('explanation', models.CharField(blank=True, max_length=1000, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('paid', models.DateTimeField(blank=True, null=True)),
                ('is_adjustment', models.BooleanField(default=False)),
                ('paypal_tid', models.CharField(blank=True, max_length=17, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plag.Order')),
            ],
        ),
    ]
